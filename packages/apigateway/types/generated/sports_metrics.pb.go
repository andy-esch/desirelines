// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v6.33.0
// source: sports_metrics.proto

package sports

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Single timeseries entry (date + value)
type TimeseriesEntry struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Date          string                 `protobuf:"bytes,1,opt,name=date,proto3" json:"date,omitempty"`     // ISO date: "2024-01-15"
	Value         float64                `protobuf:"fixed64,2,opt,name=value,proto3" json:"value,omitempty"` // Metric value
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TimeseriesEntry) Reset() {
	*x = TimeseriesEntry{}
	mi := &file_sports_metrics_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TimeseriesEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimeseriesEntry) ProtoMessage() {}

func (x *TimeseriesEntry) ProtoReflect() protoreflect.Message {
	mi := &file_sports_metrics_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimeseriesEntry.ProtoReflect.Descriptor instead.
func (*TimeseriesEntry) Descriptor() ([]byte, []int) {
	return file_sports_metrics_proto_rawDescGZIP(), []int{0}
}

func (x *TimeseriesEntry) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *TimeseriesEntry) GetValue() float64 {
	if x != nil {
		return x.Value
	}
	return 0
}

// Daily activity summary
type DailyActivity struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Distance in METERS (optional - not all sports have distance)
	// SI base unit: matches Strava API, no conversion errors
	DistanceMeters *float64 `protobuf:"fixed64,1,opt,name=distance_meters,json=distanceMeters,proto3,oneof" json:"distance_meters,omitempty"`
	// Time in minutes
	TimeMinutes *float64 `protobuf:"fixed64,2,opt,name=time_minutes,json=timeMinutes,proto3,oneof" json:"time_minutes,omitempty"`
	// Elevation gain in METERS (optional)
	ElevationMeters *float64 `protobuf:"fixed64,3,opt,name=elevation_meters,json=elevationMeters,proto3,oneof" json:"elevation_meters,omitempty"`
	// Number of activities on this day
	Activities int32 `protobuf:"varint,4,opt,name=activities,proto3" json:"activities,omitempty"`
	// Strava activity IDs
	ActivityIds   []int64 `protobuf:"varint,5,rep,packed,name=activity_ids,json=activityIds,proto3" json:"activity_ids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DailyActivity) Reset() {
	*x = DailyActivity{}
	mi := &file_sports_metrics_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DailyActivity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DailyActivity) ProtoMessage() {}

func (x *DailyActivity) ProtoReflect() protoreflect.Message {
	mi := &file_sports_metrics_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DailyActivity.ProtoReflect.Descriptor instead.
func (*DailyActivity) Descriptor() ([]byte, []int) {
	return file_sports_metrics_proto_rawDescGZIP(), []int{1}
}

func (x *DailyActivity) GetDistanceMeters() float64 {
	if x != nil && x.DistanceMeters != nil {
		return *x.DistanceMeters
	}
	return 0
}

func (x *DailyActivity) GetTimeMinutes() float64 {
	if x != nil && x.TimeMinutes != nil {
		return *x.TimeMinutes
	}
	return 0
}

func (x *DailyActivity) GetElevationMeters() float64 {
	if x != nil && x.ElevationMeters != nil {
		return *x.ElevationMeters
	}
	return 0
}

func (x *DailyActivity) GetActivities() int32 {
	if x != nil {
		return x.Activities
	}
	return 0
}

func (x *DailyActivity) GetActivityIds() []int64 {
	if x != nil {
		return x.ActivityIds
	}
	return nil
}

// Pre-computed timeseries for efficient chart rendering
type MetricsTimeseries struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	DistanceMeters  []*TimeseriesEntry     `protobuf:"bytes,1,rep,name=distance_meters,json=distanceMeters,proto3" json:"distance_meters,omitempty"`
	TimeMinutes     []*TimeseriesEntry     `protobuf:"bytes,2,rep,name=time_minutes,json=timeMinutes,proto3" json:"time_minutes,omitempty"`
	ElevationMeters []*TimeseriesEntry     `protobuf:"bytes,3,rep,name=elevation_meters,json=elevationMeters,proto3" json:"elevation_meters,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *MetricsTimeseries) Reset() {
	*x = MetricsTimeseries{}
	mi := &file_sports_metrics_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MetricsTimeseries) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetricsTimeseries) ProtoMessage() {}

func (x *MetricsTimeseries) ProtoReflect() protoreflect.Message {
	mi := &file_sports_metrics_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetricsTimeseries.ProtoReflect.Descriptor instead.
func (*MetricsTimeseries) Descriptor() ([]byte, []int) {
	return file_sports_metrics_proto_rawDescGZIP(), []int{2}
}

func (x *MetricsTimeseries) GetDistanceMeters() []*TimeseriesEntry {
	if x != nil {
		return x.DistanceMeters
	}
	return nil
}

func (x *MetricsTimeseries) GetTimeMinutes() []*TimeseriesEntry {
	if x != nil {
		return x.TimeMinutes
	}
	return nil
}

func (x *MetricsTimeseries) GetElevationMeters() []*TimeseriesEntry {
	if x != nil {
		return x.ElevationMeters
	}
	return nil
}

// Sport metrics file (activities/{year}/metrics/{sport}.json)
type SportMetrics struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Pre-computed timeseries arrays
	Timeseries *MetricsTimeseries `protobuf:"bytes,1,opt,name=timeseries,proto3" json:"timeseries,omitempty"`
	// Daily rollups (date-keyed)
	Daily map[string]*DailyActivity `protobuf:"bytes,2,rep,name=daily,proto3" json:"daily,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Metadata
	Metadata      *SportMetadata `protobuf:"bytes,3,opt,name=metadata,proto3" json:"metadata,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SportMetrics) Reset() {
	*x = SportMetrics{}
	mi := &file_sports_metrics_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SportMetrics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SportMetrics) ProtoMessage() {}

func (x *SportMetrics) ProtoReflect() protoreflect.Message {
	mi := &file_sports_metrics_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SportMetrics.ProtoReflect.Descriptor instead.
func (*SportMetrics) Descriptor() ([]byte, []int) {
	return file_sports_metrics_proto_rawDescGZIP(), []int{3}
}

func (x *SportMetrics) GetTimeseries() *MetricsTimeseries {
	if x != nil {
		return x.Timeseries
	}
	return nil
}

func (x *SportMetrics) GetDaily() map[string]*DailyActivity {
	if x != nil {
		return x.Daily
	}
	return nil
}

func (x *SportMetrics) GetMetadata() *SportMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// Metadata about the sport metrics
type SportMetadata struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Sport            string                 `protobuf:"bytes,1,opt,name=sport,proto3" json:"sport,omitempty"`                                               // "cycling", "running", "yoga"
	Year             int32                  `protobuf:"varint,2,opt,name=year,proto3" json:"year,omitempty"`                                                // 2024
	AvailableMetrics []string               `protobuf:"bytes,3,rep,name=available_metrics,json=availableMetrics,proto3" json:"available_metrics,omitempty"` // ["distance_meters", "time_minutes", ...]
	PrimaryMetric    string                 `protobuf:"bytes,4,opt,name=primary_metric,json=primaryMetric,proto3" json:"primary_metric,omitempty"`          // "distance_meters"
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *SportMetadata) Reset() {
	*x = SportMetadata{}
	mi := &file_sports_metrics_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SportMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SportMetadata) ProtoMessage() {}

func (x *SportMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_sports_metrics_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SportMetadata.ProtoReflect.Descriptor instead.
func (*SportMetadata) Descriptor() ([]byte, []int) {
	return file_sports_metrics_proto_rawDescGZIP(), []int{4}
}

func (x *SportMetadata) GetSport() string {
	if x != nil {
		return x.Sport
	}
	return ""
}

func (x *SportMetadata) GetYear() int32 {
	if x != nil {
		return x.Year
	}
	return 0
}

func (x *SportMetadata) GetAvailableMetrics() []string {
	if x != nil {
		return x.AvailableMetrics
	}
	return nil
}

func (x *SportMetadata) GetPrimaryMetric() string {
	if x != nil {
		return x.PrimaryMetric
	}
	return ""
}

// Sport totals for a year
type SportTotals struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	DistanceMeters  *float64               `protobuf:"fixed64,1,opt,name=distance_meters,json=distanceMeters,proto3,oneof" json:"distance_meters,omitempty"`
	TimeMinutes     *float64               `protobuf:"fixed64,2,opt,name=time_minutes,json=timeMinutes,proto3,oneof" json:"time_minutes,omitempty"`
	ElevationMeters *float64               `protobuf:"fixed64,3,opt,name=elevation_meters,json=elevationMeters,proto3,oneof" json:"elevation_meters,omitempty"`
	Activities      int32                  `protobuf:"varint,4,opt,name=activities,proto3" json:"activities,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *SportTotals) Reset() {
	*x = SportTotals{}
	mi := &file_sports_metrics_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SportTotals) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SportTotals) ProtoMessage() {}

func (x *SportTotals) ProtoReflect() protoreflect.Message {
	mi := &file_sports_metrics_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SportTotals.ProtoReflect.Descriptor instead.
func (*SportTotals) Descriptor() ([]byte, []int) {
	return file_sports_metrics_proto_rawDescGZIP(), []int{5}
}

func (x *SportTotals) GetDistanceMeters() float64 {
	if x != nil && x.DistanceMeters != nil {
		return *x.DistanceMeters
	}
	return 0
}

func (x *SportTotals) GetTimeMinutes() float64 {
	if x != nil && x.TimeMinutes != nil {
		return *x.TimeMinutes
	}
	return 0
}

func (x *SportTotals) GetElevationMeters() float64 {
	if x != nil && x.ElevationMeters != nil {
		return *x.ElevationMeters
	}
	return 0
}

func (x *SportTotals) GetActivities() int32 {
	if x != nil {
		return x.Activities
	}
	return 0
}

// Year metadata file (activities/{year}/metadata.json)
type YearMetadata struct {
	state              protoimpl.MessageState  `protogen:"open.v1"`
	Year               int32                   `protobuf:"varint,1,opt,name=year,proto3" json:"year,omitempty"`
	Sports             []string                `protobuf:"bytes,2,rep,name=sports,proto3" json:"sports,omitempty"`                                                                           // ["cycling", "running", "yoga"]
	Totals             map[string]*SportTotals `protobuf:"bytes,3,rep,name=totals,proto3" json:"totals,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // Per-sport totals
	LastUpdated        string                  `protobuf:"bytes,4,opt,name=last_updated,json=lastUpdated,proto3" json:"last_updated,omitempty"`                                              // ISO timestamp
	AggregationVersion string                  `protobuf:"bytes,5,opt,name=aggregation_version,json=aggregationVersion,proto3" json:"aggregation_version,omitempty"`                         // "1.0"
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *YearMetadata) Reset() {
	*x = YearMetadata{}
	mi := &file_sports_metrics_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *YearMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*YearMetadata) ProtoMessage() {}

func (x *YearMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_sports_metrics_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use YearMetadata.ProtoReflect.Descriptor instead.
func (*YearMetadata) Descriptor() ([]byte, []int) {
	return file_sports_metrics_proto_rawDescGZIP(), []int{6}
}

func (x *YearMetadata) GetYear() int32 {
	if x != nil {
		return x.Year
	}
	return 0
}

func (x *YearMetadata) GetSports() []string {
	if x != nil {
		return x.Sports
	}
	return nil
}

func (x *YearMetadata) GetTotals() map[string]*SportTotals {
	if x != nil {
		return x.Totals
	}
	return nil
}

func (x *YearMetadata) GetLastUpdated() string {
	if x != nil {
		return x.LastUpdated
	}
	return ""
}

func (x *YearMetadata) GetAggregationVersion() string {
	if x != nil {
		return x.AggregationVersion
	}
	return ""
}

var File_sports_metrics_proto protoreflect.FileDescriptor

const file_sports_metrics_proto_rawDesc = "" +
	"\n" +
	"\x14sports_metrics.proto\x12\x15desirelines.sports.v1\";\n" +
	"\x0fTimeseriesEntry\x12\x12\n" +
	"\x04date\x18\x01 \x01(\tR\x04date\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x01R\x05value\"\x92\x02\n" +
	"\rDailyActivity\x12,\n" +
	"\x0fdistance_meters\x18\x01 \x01(\x01H\x00R\x0edistanceMeters\x88\x01\x01\x12&\n" +
	"\ftime_minutes\x18\x02 \x01(\x01H\x01R\vtimeMinutes\x88\x01\x01\x12.\n" +
	"\x10elevation_meters\x18\x03 \x01(\x01H\x02R\x0felevationMeters\x88\x01\x01\x12\x1e\n" +
	"\n" +
	"activities\x18\x04 \x01(\x05R\n" +
	"activities\x12!\n" +
	"\factivity_ids\x18\x05 \x03(\x03R\vactivityIdsB\x12\n" +
	"\x10_distance_metersB\x0f\n" +
	"\r_time_minutesB\x13\n" +
	"\x11_elevation_meters\"\x82\x02\n" +
	"\x11MetricsTimeseries\x12O\n" +
	"\x0fdistance_meters\x18\x01 \x03(\v2&.desirelines.sports.v1.TimeseriesEntryR\x0edistanceMeters\x12I\n" +
	"\ftime_minutes\x18\x02 \x03(\v2&.desirelines.sports.v1.TimeseriesEntryR\vtimeMinutes\x12Q\n" +
	"\x10elevation_meters\x18\x03 \x03(\v2&.desirelines.sports.v1.TimeseriesEntryR\x0felevationMeters\"\xc0\x02\n" +
	"\fSportMetrics\x12H\n" +
	"\n" +
	"timeseries\x18\x01 \x01(\v2(.desirelines.sports.v1.MetricsTimeseriesR\n" +
	"timeseries\x12D\n" +
	"\x05daily\x18\x02 \x03(\v2..desirelines.sports.v1.SportMetrics.DailyEntryR\x05daily\x12@\n" +
	"\bmetadata\x18\x03 \x01(\v2$.desirelines.sports.v1.SportMetadataR\bmetadata\x1a^\n" +
	"\n" +
	"DailyEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12:\n" +
	"\x05value\x18\x02 \x01(\v2$.desirelines.sports.v1.DailyActivityR\x05value:\x028\x01\"\x8d\x01\n" +
	"\rSportMetadata\x12\x14\n" +
	"\x05sport\x18\x01 \x01(\tR\x05sport\x12\x12\n" +
	"\x04year\x18\x02 \x01(\x05R\x04year\x12+\n" +
	"\x11available_metrics\x18\x03 \x03(\tR\x10availableMetrics\x12%\n" +
	"\x0eprimary_metric\x18\x04 \x01(\tR\rprimaryMetric\"\xed\x01\n" +
	"\vSportTotals\x12,\n" +
	"\x0fdistance_meters\x18\x01 \x01(\x01H\x00R\x0edistanceMeters\x88\x01\x01\x12&\n" +
	"\ftime_minutes\x18\x02 \x01(\x01H\x01R\vtimeMinutes\x88\x01\x01\x12.\n" +
	"\x10elevation_meters\x18\x03 \x01(\x01H\x02R\x0felevationMeters\x88\x01\x01\x12\x1e\n" +
	"\n" +
	"activities\x18\x04 \x01(\x05R\n" +
	"activitiesB\x12\n" +
	"\x10_distance_metersB\x0f\n" +
	"\r_time_minutesB\x13\n" +
	"\x11_elevation_meters\"\xb6\x02\n" +
	"\fYearMetadata\x12\x12\n" +
	"\x04year\x18\x01 \x01(\x05R\x04year\x12\x16\n" +
	"\x06sports\x18\x02 \x03(\tR\x06sports\x12G\n" +
	"\x06totals\x18\x03 \x03(\v2/.desirelines.sports.v1.YearMetadata.TotalsEntryR\x06totals\x12!\n" +
	"\flast_updated\x18\x04 \x01(\tR\vlastUpdated\x12/\n" +
	"\x13aggregation_version\x18\x05 \x01(\tR\x12aggregationVersion\x1a]\n" +
	"\vTotalsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x128\n" +
	"\x05value\x18\x02 \x01(\v2\".desirelines.sports.v1.SportTotalsR\x05value:\x028\x01BMZKgithub.com/andy-esch/desirelines/packages/apigateway/types/generated/sportsb\x06proto3"

var (
	file_sports_metrics_proto_rawDescOnce sync.Once
	file_sports_metrics_proto_rawDescData []byte
)

func file_sports_metrics_proto_rawDescGZIP() []byte {
	file_sports_metrics_proto_rawDescOnce.Do(func() {
		file_sports_metrics_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_sports_metrics_proto_rawDesc), len(file_sports_metrics_proto_rawDesc)))
	})
	return file_sports_metrics_proto_rawDescData
}

var file_sports_metrics_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_sports_metrics_proto_goTypes = []any{
	(*TimeseriesEntry)(nil),   // 0: desirelines.sports.v1.TimeseriesEntry
	(*DailyActivity)(nil),     // 1: desirelines.sports.v1.DailyActivity
	(*MetricsTimeseries)(nil), // 2: desirelines.sports.v1.MetricsTimeseries
	(*SportMetrics)(nil),      // 3: desirelines.sports.v1.SportMetrics
	(*SportMetadata)(nil),     // 4: desirelines.sports.v1.SportMetadata
	(*SportTotals)(nil),       // 5: desirelines.sports.v1.SportTotals
	(*YearMetadata)(nil),      // 6: desirelines.sports.v1.YearMetadata
	nil,                       // 7: desirelines.sports.v1.SportMetrics.DailyEntry
	nil,                       // 8: desirelines.sports.v1.YearMetadata.TotalsEntry
}
var file_sports_metrics_proto_depIdxs = []int32{
	0, // 0: desirelines.sports.v1.MetricsTimeseries.distance_meters:type_name -> desirelines.sports.v1.TimeseriesEntry
	0, // 1: desirelines.sports.v1.MetricsTimeseries.time_minutes:type_name -> desirelines.sports.v1.TimeseriesEntry
	0, // 2: desirelines.sports.v1.MetricsTimeseries.elevation_meters:type_name -> desirelines.sports.v1.TimeseriesEntry
	2, // 3: desirelines.sports.v1.SportMetrics.timeseries:type_name -> desirelines.sports.v1.MetricsTimeseries
	7, // 4: desirelines.sports.v1.SportMetrics.daily:type_name -> desirelines.sports.v1.SportMetrics.DailyEntry
	4, // 5: desirelines.sports.v1.SportMetrics.metadata:type_name -> desirelines.sports.v1.SportMetadata
	8, // 6: desirelines.sports.v1.YearMetadata.totals:type_name -> desirelines.sports.v1.YearMetadata.TotalsEntry
	1, // 7: desirelines.sports.v1.SportMetrics.DailyEntry.value:type_name -> desirelines.sports.v1.DailyActivity
	5, // 8: desirelines.sports.v1.YearMetadata.TotalsEntry.value:type_name -> desirelines.sports.v1.SportTotals
	9, // [9:9] is the sub-list for method output_type
	9, // [9:9] is the sub-list for method input_type
	9, // [9:9] is the sub-list for extension type_name
	9, // [9:9] is the sub-list for extension extendee
	0, // [0:9] is the sub-list for field type_name
}

func init() { file_sports_metrics_proto_init() }
func file_sports_metrics_proto_init() {
	if File_sports_metrics_proto != nil {
		return
	}
	file_sports_metrics_proto_msgTypes[1].OneofWrappers = []any{}
	file_sports_metrics_proto_msgTypes[5].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_sports_metrics_proto_rawDesc), len(file_sports_metrics_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_sports_metrics_proto_goTypes,
		DependencyIndexes: file_sports_metrics_proto_depIdxs,
		MessageInfos:      file_sports_metrics_proto_msgTypes,
	}.Build()
	File_sports_metrics_proto = out.File
	file_sports_metrics_proto_goTypes = nil
	file_sports_metrics_proto_depIdxs = nil
}
