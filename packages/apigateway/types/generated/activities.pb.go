// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v6.33.0
// source: activities.proto

package activities

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Timeseries entry for distance data
// Represents cumulative distance over time
type TimeseriesEntry struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Date          string                 `protobuf:"bytes,1,opt,name=date,proto3" json:"date,omitempty"`     // ISO 8601 date string (e.g., "2025-01-15")
	Value         float64                `protobuf:"fixed64,2,opt,name=value,proto3" json:"value,omitempty"` // Distance in miles (cumulative)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TimeseriesEntry) Reset() {
	*x = TimeseriesEntry{}
	mi := &file_activities_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TimeseriesEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimeseriesEntry) ProtoMessage() {}

func (x *TimeseriesEntry) ProtoReflect() protoreflect.Message {
	mi := &file_activities_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimeseriesEntry.ProtoReflect.Descriptor instead.
func (*TimeseriesEntry) Descriptor() ([]byte, []int) {
	return file_activities_proto_rawDescGZIP(), []int{0}
}

func (x *TimeseriesEntry) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *TimeseriesEntry) GetValue() float64 {
	if x != nil {
		return x.Value
	}
	return 0
}

// Distance data payload consumed by frontend
// This is the primary data contract between backend and frontend
//
// Backend Producer:
//   - Python: packages/stravapipe/src/stravapipe/application/aggregator/services/pacing_service.py
//   - Function: PacingService.calculate()
//   - Storage: activities/{year}/distances.json in Cloud Storage
//
// API Gateway:
//   - Go: packages/apigateway/handler.go
//   - Endpoint: GET /activities/{year}/distances
//
// Frontend Consumer:
//   - TypeScript: packages/web/src/api/activities.ts
//   - Function: fetchDistanceData()
//   - Type: RideBlobType (maps to this proto)
//   - Used by: DistanceChartRecharts and PacingChartRecharts
//
// Note: Pacing calculations (daily pace, goal pacing) are computed client-side
//
//	from the distance_traveled data. See packages/web/src/utils/goalCalculations.ts
type DistancesPayload struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Actual cumulative distance traveled over time
	// This is the primary data series - all other data can be derived from this
	DistanceTraveled []*TimeseriesEntry `protobuf:"bytes,1,rep,name=distance_traveled,json=distanceTraveled,proto3" json:"distance_traveled,omitempty"`
	// Legacy fields - kept for backward compatibility but may be removed in future
	// These are no longer generated by the backend (empty arrays)
	AvgDistance   []*TimeseriesEntry `protobuf:"bytes,2,rep,name=avg_distance,json=avgDistance,proto3" json:"avg_distance,omitempty"`       // Deprecated: use frontend calculations
	LowerDistance []*TimeseriesEntry `protobuf:"bytes,3,rep,name=lower_distance,json=lowerDistance,proto3" json:"lower_distance,omitempty"` // Deprecated: use user goals instead
	UpperDistance []*TimeseriesEntry `protobuf:"bytes,4,rep,name=upper_distance,json=upperDistance,proto3" json:"upper_distance,omitempty"` // Deprecated: use user goals instead
	// Daily activity summaries keyed by date (ISO 8601 string)
	// Not currently used by frontend but available for future features
	Summaries     map[string]*DailySummary `protobuf:"bytes,5,rep,name=summaries,proto3" json:"summaries,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DistancesPayload) Reset() {
	*x = DistancesPayload{}
	mi := &file_activities_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DistancesPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DistancesPayload) ProtoMessage() {}

func (x *DistancesPayload) ProtoReflect() protoreflect.Message {
	mi := &file_activities_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DistancesPayload.ProtoReflect.Descriptor instead.
func (*DistancesPayload) Descriptor() ([]byte, []int) {
	return file_activities_proto_rawDescGZIP(), []int{1}
}

func (x *DistancesPayload) GetDistanceTraveled() []*TimeseriesEntry {
	if x != nil {
		return x.DistanceTraveled
	}
	return nil
}

func (x *DistancesPayload) GetAvgDistance() []*TimeseriesEntry {
	if x != nil {
		return x.AvgDistance
	}
	return nil
}

func (x *DistancesPayload) GetLowerDistance() []*TimeseriesEntry {
	if x != nil {
		return x.LowerDistance
	}
	return nil
}

func (x *DistancesPayload) GetUpperDistance() []*TimeseriesEntry {
	if x != nil {
		return x.UpperDistance
	}
	return nil
}

func (x *DistancesPayload) GetSummaries() map[string]*DailySummary {
	if x != nil {
		return x.Summaries
	}
	return nil
}

// Daily summary for a specific date
// Provides raw activity metadata for a single day
type DailySummary struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ActivityIds   []string               `protobuf:"bytes,1,rep,name=activity_ids,json=activityIds,proto3" json:"activity_ids,omitempty"`         // Strava activity IDs for this day
	DistanceMiles float64                `protobuf:"fixed64,2,opt,name=distance_miles,json=distanceMiles,proto3" json:"distance_miles,omitempty"` // Total distance for this day (not cumulative)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DailySummary) Reset() {
	*x = DailySummary{}
	mi := &file_activities_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DailySummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DailySummary) ProtoMessage() {}

func (x *DailySummary) ProtoReflect() protoreflect.Message {
	mi := &file_activities_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DailySummary.ProtoReflect.Descriptor instead.
func (*DailySummary) Descriptor() ([]byte, []int) {
	return file_activities_proto_rawDescGZIP(), []int{2}
}

func (x *DailySummary) GetActivityIds() []string {
	if x != nil {
		return x.ActivityIds
	}
	return nil
}

func (x *DailySummary) GetDistanceMiles() float64 {
	if x != nil {
		return x.DistanceMiles
	}
	return 0
}

// Summary object for an entire year
// Stored separately from distances payload
//
// Storage: activities/{year}/summary_activities.json
// Endpoint: GET /activities/{year}/summary
type YearSummary struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Daily summaries keyed by date (ISO 8601 string, e.g., "2025-01-15")
	DailySummaries map[string]*DailySummary `protobuf:"bytes,1,rep,name=daily_summaries,json=dailySummaries,proto3" json:"daily_summaries,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *YearSummary) Reset() {
	*x = YearSummary{}
	mi := &file_activities_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *YearSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*YearSummary) ProtoMessage() {}

func (x *YearSummary) ProtoReflect() protoreflect.Message {
	mi := &file_activities_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use YearSummary.ProtoReflect.Descriptor instead.
func (*YearSummary) Descriptor() ([]byte, []int) {
	return file_activities_proto_rawDescGZIP(), []int{3}
}

func (x *YearSummary) GetDailySummaries() map[string]*DailySummary {
	if x != nil {
		return x.DailySummaries
	}
	return nil
}

var File_activities_proto protoreflect.FileDescriptor

const file_activities_proto_rawDesc = "" +
	"\n" +
	"\x10activities.proto\x12\x19desirelines.activities.v1\";\n" +
	"\x0fTimeseriesEntry\x12\x12\n" +
	"\x04date\x18\x01 \x01(\tR\x04date\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x01R\x05value\"\xa1\x04\n" +
	"\x10DistancesPayload\x12W\n" +
	"\x11distance_traveled\x18\x01 \x03(\v2*.desirelines.activities.v1.TimeseriesEntryR\x10distanceTraveled\x12M\n" +
	"\favg_distance\x18\x02 \x03(\v2*.desirelines.activities.v1.TimeseriesEntryR\vavgDistance\x12Q\n" +
	"\x0elower_distance\x18\x03 \x03(\v2*.desirelines.activities.v1.TimeseriesEntryR\rlowerDistance\x12Q\n" +
	"\x0eupper_distance\x18\x04 \x03(\v2*.desirelines.activities.v1.TimeseriesEntryR\rupperDistance\x12X\n" +
	"\tsummaries\x18\x05 \x03(\v2:.desirelines.activities.v1.DistancesPayload.SummariesEntryR\tsummaries\x1ae\n" +
	"\x0eSummariesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12=\n" +
	"\x05value\x18\x02 \x01(\v2'.desirelines.activities.v1.DailySummaryR\x05value:\x028\x01\"X\n" +
	"\fDailySummary\x12!\n" +
	"\factivity_ids\x18\x01 \x03(\tR\vactivityIds\x12%\n" +
	"\x0edistance_miles\x18\x02 \x01(\x01R\rdistanceMiles\"\xde\x01\n" +
	"\vYearSummary\x12c\n" +
	"\x0fdaily_summaries\x18\x01 \x03(\v2:.desirelines.activities.v1.YearSummary.DailySummariesEntryR\x0edailySummaries\x1aj\n" +
	"\x13DailySummariesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12=\n" +
	"\x05value\x18\x02 \x01(\v2'.desirelines.activities.v1.DailySummaryR\x05value:\x028\x01BBZ@github.com/andy-esch/desirelines/schemas/generated/go/activitiesb\x06proto3"

var (
	file_activities_proto_rawDescOnce sync.Once
	file_activities_proto_rawDescData []byte
)

func file_activities_proto_rawDescGZIP() []byte {
	file_activities_proto_rawDescOnce.Do(func() {
		file_activities_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_activities_proto_rawDesc), len(file_activities_proto_rawDesc)))
	})
	return file_activities_proto_rawDescData
}

var file_activities_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_activities_proto_goTypes = []any{
	(*TimeseriesEntry)(nil),  // 0: desirelines.activities.v1.TimeseriesEntry
	(*DistancesPayload)(nil), // 1: desirelines.activities.v1.DistancesPayload
	(*DailySummary)(nil),     // 2: desirelines.activities.v1.DailySummary
	(*YearSummary)(nil),      // 3: desirelines.activities.v1.YearSummary
	nil,                      // 4: desirelines.activities.v1.DistancesPayload.SummariesEntry
	nil,                      // 5: desirelines.activities.v1.YearSummary.DailySummariesEntry
}
var file_activities_proto_depIdxs = []int32{
	0, // 0: desirelines.activities.v1.DistancesPayload.distance_traveled:type_name -> desirelines.activities.v1.TimeseriesEntry
	0, // 1: desirelines.activities.v1.DistancesPayload.avg_distance:type_name -> desirelines.activities.v1.TimeseriesEntry
	0, // 2: desirelines.activities.v1.DistancesPayload.lower_distance:type_name -> desirelines.activities.v1.TimeseriesEntry
	0, // 3: desirelines.activities.v1.DistancesPayload.upper_distance:type_name -> desirelines.activities.v1.TimeseriesEntry
	4, // 4: desirelines.activities.v1.DistancesPayload.summaries:type_name -> desirelines.activities.v1.DistancesPayload.SummariesEntry
	5, // 5: desirelines.activities.v1.YearSummary.daily_summaries:type_name -> desirelines.activities.v1.YearSummary.DailySummariesEntry
	2, // 6: desirelines.activities.v1.DistancesPayload.SummariesEntry.value:type_name -> desirelines.activities.v1.DailySummary
	2, // 7: desirelines.activities.v1.YearSummary.DailySummariesEntry.value:type_name -> desirelines.activities.v1.DailySummary
	8, // [8:8] is the sub-list for method output_type
	8, // [8:8] is the sub-list for method input_type
	8, // [8:8] is the sub-list for extension type_name
	8, // [8:8] is the sub-list for extension extendee
	0, // [0:8] is the sub-list for field type_name
}

func init() { file_activities_proto_init() }
func file_activities_proto_init() {
	if File_activities_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_activities_proto_rawDesc), len(file_activities_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_activities_proto_goTypes,
		DependencyIndexes: file_activities_proto_depIdxs,
		MessageInfos:      file_activities_proto_msgTypes,
	}.Build()
	File_activities_proto = out.File
	file_activities_proto_goTypes = nil
	file_activities_proto_depIdxs = nil
}
