// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v6.33.0
// source: user_config.proto

package userconfig

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AnnotationType int32

const (
	AnnotationType_ANNOTATION_TYPE_UNSPECIFIED AnnotationType = 0
	AnnotationType_ANNOTATION_TYPE_EVENT       AnnotationType = 1
	AnnotationType_ANNOTATION_TYPE_PERIOD      AnnotationType = 2
	AnnotationType_ANNOTATION_TYPE_NOTE        AnnotationType = 3
)

// Enum value maps for AnnotationType.
var (
	AnnotationType_name = map[int32]string{
		0: "ANNOTATION_TYPE_UNSPECIFIED",
		1: "ANNOTATION_TYPE_EVENT",
		2: "ANNOTATION_TYPE_PERIOD",
		3: "ANNOTATION_TYPE_NOTE",
	}
	AnnotationType_value = map[string]int32{
		"ANNOTATION_TYPE_UNSPECIFIED": 0,
		"ANNOTATION_TYPE_EVENT":       1,
		"ANNOTATION_TYPE_PERIOD":      2,
		"ANNOTATION_TYPE_NOTE":        3,
	}
)

func (x AnnotationType) Enum() *AnnotationType {
	p := new(AnnotationType)
	*p = x
	return p
}

func (x AnnotationType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AnnotationType) Descriptor() protoreflect.EnumDescriptor {
	return file_user_config_proto_enumTypes[0].Descriptor()
}

func (AnnotationType) Type() protoreflect.EnumType {
	return &file_user_config_proto_enumTypes[0]
}

func (x AnnotationType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AnnotationType.Descriptor instead.
func (AnnotationType) EnumDescriptor() ([]byte, []int) {
	return file_user_config_proto_rawDescGZIP(), []int{0}
}

// Top-level user configuration stored in Firestore
// Document path: users/{userId}/config/v1
type UserConfig struct {
	state         protoimpl.MessageState         `protogen:"open.v1"`
	SchemaVersion string                         `protobuf:"bytes,1,opt,name=schema_version,json=schemaVersion,proto3" json:"schema_version,omitempty"` // "1.0"
	UserId        string                         `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	LastUpdated   string                         `protobuf:"bytes,3,opt,name=last_updated,json=lastUpdated,proto3" json:"last_updated,omitempty"`                                             // RFC3339 timestamp
	Goals         map[string]*GoalsForYear       `protobuf:"bytes,10,rep,name=goals,proto3" json:"goals,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // key = year (e.g., "2025")
	Annotations   map[string]*AnnotationsForYear `protobuf:"bytes,11,rep,name=annotations,proto3" json:"annotations,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Preferences   *Preferences                   `protobuf:"bytes,12,opt,name=preferences,proto3" json:"preferences,omitempty"`
	Metadata      *Metadata                      `protobuf:"bytes,13,opt,name=metadata,proto3" json:"metadata,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserConfig) Reset() {
	*x = UserConfig{}
	mi := &file_user_config_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserConfig) ProtoMessage() {}

func (x *UserConfig) ProtoReflect() protoreflect.Message {
	mi := &file_user_config_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserConfig.ProtoReflect.Descriptor instead.
func (*UserConfig) Descriptor() ([]byte, []int) {
	return file_user_config_proto_rawDescGZIP(), []int{0}
}

func (x *UserConfig) GetSchemaVersion() string {
	if x != nil {
		return x.SchemaVersion
	}
	return ""
}

func (x *UserConfig) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UserConfig) GetLastUpdated() string {
	if x != nil {
		return x.LastUpdated
	}
	return ""
}

func (x *UserConfig) GetGoals() map[string]*GoalsForYear {
	if x != nil {
		return x.Goals
	}
	return nil
}

func (x *UserConfig) GetAnnotations() map[string]*AnnotationsForYear {
	if x != nil {
		return x.Annotations
	}
	return nil
}

func (x *UserConfig) GetPreferences() *Preferences {
	if x != nil {
		return x.Preferences
	}
	return nil
}

func (x *UserConfig) GetMetadata() *Metadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// Goals for a specific year
type GoalsForYear struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Goals         []*Goal                `protobuf:"bytes,1,rep,name=goals,proto3" json:"goals,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GoalsForYear) Reset() {
	*x = GoalsForYear{}
	mi := &file_user_config_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GoalsForYear) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoalsForYear) ProtoMessage() {}

func (x *GoalsForYear) ProtoReflect() protoreflect.Message {
	mi := &file_user_config_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoalsForYear.ProtoReflect.Descriptor instead.
func (*GoalsForYear) Descriptor() ([]byte, []int) {
	return file_user_config_proto_rawDescGZIP(), []int{1}
}

func (x *GoalsForYear) GetGoals() []*Goal {
	if x != nil {
		return x.Goals
	}
	return nil
}

type Goal struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Value         int32                  `protobuf:"varint,2,opt,name=value,proto3" json:"value,omitempty"` // Distance in miles
	Label         string                 `protobuf:"bytes,3,opt,name=label,proto3" json:"label,omitempty"`
	CreatedAt     string                 `protobuf:"bytes,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"` // RFC3339 timestamp
	UpdatedAt     string                 `protobuf:"bytes,5,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"` // RFC3339 timestamp
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Goal) Reset() {
	*x = Goal{}
	mi := &file_user_config_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Goal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Goal) ProtoMessage() {}

func (x *Goal) ProtoReflect() protoreflect.Message {
	mi := &file_user_config_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Goal.ProtoReflect.Descriptor instead.
func (*Goal) Descriptor() ([]byte, []int) {
	return file_user_config_proto_rawDescGZIP(), []int{2}
}

func (x *Goal) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Goal) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *Goal) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *Goal) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *Goal) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

// Annotations for a specific year
type AnnotationsForYear struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Annotations   []*Annotation          `protobuf:"bytes,1,rep,name=annotations,proto3" json:"annotations,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AnnotationsForYear) Reset() {
	*x = AnnotationsForYear{}
	mi := &file_user_config_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AnnotationsForYear) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnnotationsForYear) ProtoMessage() {}

func (x *AnnotationsForYear) ProtoReflect() protoreflect.Message {
	mi := &file_user_config_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnnotationsForYear.ProtoReflect.Descriptor instead.
func (*AnnotationsForYear) Descriptor() ([]byte, []int) {
	return file_user_config_proto_rawDescGZIP(), []int{3}
}

func (x *AnnotationsForYear) GetAnnotations() []*Annotation {
	if x != nil {
		return x.Annotations
	}
	return nil
}

type Annotation struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Id               string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	StartDate        string                 `protobuf:"bytes,2,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"` // ISO date: "2025-07-14"
	EndDate          string                 `protobuf:"bytes,3,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`       // Optional, empty for single-day
	Label            string                 `protobuf:"bytes,4,opt,name=label,proto3" json:"label,omitempty"`
	Description      string                 `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	StravaActivityId string                 `protobuf:"bytes,6,opt,name=strava_activity_id,json=stravaActivityId,proto3" json:"strava_activity_id,omitempty"` // Optional link
	Type             AnnotationType         `protobuf:"varint,7,opt,name=type,proto3,enum=desirelines.config.v1.AnnotationType" json:"type,omitempty"`
	CreatedAt        string                 `protobuf:"bytes,8,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"` // RFC3339 timestamp
	UpdatedAt        string                 `protobuf:"bytes,9,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"` // RFC3339 timestamp
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *Annotation) Reset() {
	*x = Annotation{}
	mi := &file_user_config_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Annotation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Annotation) ProtoMessage() {}

func (x *Annotation) ProtoReflect() protoreflect.Message {
	mi := &file_user_config_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Annotation.ProtoReflect.Descriptor instead.
func (*Annotation) Descriptor() ([]byte, []int) {
	return file_user_config_proto_rawDescGZIP(), []int{4}
}

func (x *Annotation) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Annotation) GetStartDate() string {
	if x != nil {
		return x.StartDate
	}
	return ""
}

func (x *Annotation) GetEndDate() string {
	if x != nil {
		return x.EndDate
	}
	return ""
}

func (x *Annotation) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *Annotation) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Annotation) GetStravaActivityId() string {
	if x != nil {
		return x.StravaActivityId
	}
	return ""
}

func (x *Annotation) GetType() AnnotationType {
	if x != nil {
		return x.Type
	}
	return AnnotationType_ANNOTATION_TYPE_UNSPECIFIED
}

func (x *Annotation) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *Annotation) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

// User preferences (global, not year-specific)
type Preferences struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Theme         string                 `protobuf:"bytes,1,opt,name=theme,proto3" json:"theme,omitempty"` // "light" or "dark"
	DefaultYear   int32                  `protobuf:"varint,2,opt,name=default_year,json=defaultYear,proto3" json:"default_year,omitempty"`
	ChartDefaults *ChartDefaults         `protobuf:"bytes,3,opt,name=chart_defaults,json=chartDefaults,proto3" json:"chart_defaults,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Preferences) Reset() {
	*x = Preferences{}
	mi := &file_user_config_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Preferences) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Preferences) ProtoMessage() {}

func (x *Preferences) ProtoReflect() protoreflect.Message {
	mi := &file_user_config_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Preferences.ProtoReflect.Descriptor instead.
func (*Preferences) Descriptor() ([]byte, []int) {
	return file_user_config_proto_rawDescGZIP(), []int{5}
}

func (x *Preferences) GetTheme() string {
	if x != nil {
		return x.Theme
	}
	return ""
}

func (x *Preferences) GetDefaultYear() int32 {
	if x != nil {
		return x.DefaultYear
	}
	return 0
}

func (x *Preferences) GetChartDefaults() *ChartDefaults {
	if x != nil {
		return x.ChartDefaults
	}
	return nil
}

type ChartDefaults struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ShowAverage   bool                   `protobuf:"varint,1,opt,name=show_average,json=showAverage,proto3" json:"show_average,omitempty"`
	ShowGoals     bool                   `protobuf:"varint,2,opt,name=show_goals,json=showGoals,proto3" json:"show_goals,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChartDefaults) Reset() {
	*x = ChartDefaults{}
	mi := &file_user_config_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChartDefaults) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChartDefaults) ProtoMessage() {}

func (x *ChartDefaults) ProtoReflect() protoreflect.Message {
	mi := &file_user_config_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChartDefaults.ProtoReflect.Descriptor instead.
func (*ChartDefaults) Descriptor() ([]byte, []int) {
	return file_user_config_proto_rawDescGZIP(), []int{6}
}

func (x *ChartDefaults) GetShowAverage() bool {
	if x != nil {
		return x.ShowAverage
	}
	return false
}

func (x *ChartDefaults) GetShowGoals() bool {
	if x != nil {
		return x.ShowGoals
	}
	return false
}

// Metadata about the config itself
type Metadata struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	CreatedAt        string                 `protobuf:"bytes,1,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"` // RFC3339 timestamp
	LastSyncedDevice string                 `protobuf:"bytes,2,opt,name=last_synced_device,json=lastSyncedDevice,proto3" json:"last_synced_device,omitempty"`
	ConfigTypes      []string               `protobuf:"bytes,3,rep,name=config_types,json=configTypes,proto3" json:"config_types,omitempty"` // ["goals", "annotations", "preferences"]
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *Metadata) Reset() {
	*x = Metadata{}
	mi := &file_user_config_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Metadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Metadata) ProtoMessage() {}

func (x *Metadata) ProtoReflect() protoreflect.Message {
	mi := &file_user_config_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Metadata.ProtoReflect.Descriptor instead.
func (*Metadata) Descriptor() ([]byte, []int) {
	return file_user_config_proto_rawDescGZIP(), []int{7}
}

func (x *Metadata) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *Metadata) GetLastSyncedDevice() string {
	if x != nil {
		return x.LastSyncedDevice
	}
	return ""
}

func (x *Metadata) GetConfigTypes() []string {
	if x != nil {
		return x.ConfigTypes
	}
	return nil
}

var File_user_config_proto protoreflect.FileDescriptor

const file_user_config_proto_rawDesc = "" +
	"\n" +
	"\x11user_config.proto\x12\x15desirelines.config.v1\"\xd6\x04\n" +
	"\n" +
	"UserConfig\x12%\n" +
	"\x0eschema_version\x18\x01 \x01(\tR\rschemaVersion\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\x12!\n" +
	"\flast_updated\x18\x03 \x01(\tR\vlastUpdated\x12B\n" +
	"\x05goals\x18\n" +
	" \x03(\v2,.desirelines.config.v1.UserConfig.GoalsEntryR\x05goals\x12T\n" +
	"\vannotations\x18\v \x03(\v22.desirelines.config.v1.UserConfig.AnnotationsEntryR\vannotations\x12D\n" +
	"\vpreferences\x18\f \x01(\v2\".desirelines.config.v1.PreferencesR\vpreferences\x12;\n" +
	"\bmetadata\x18\r \x01(\v2\x1f.desirelines.config.v1.MetadataR\bmetadata\x1a]\n" +
	"\n" +
	"GoalsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x129\n" +
	"\x05value\x18\x02 \x01(\v2#.desirelines.config.v1.GoalsForYearR\x05value:\x028\x01\x1ai\n" +
	"\x10AnnotationsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12?\n" +
	"\x05value\x18\x02 \x01(\v2).desirelines.config.v1.AnnotationsForYearR\x05value:\x028\x01\"A\n" +
	"\fGoalsForYear\x121\n" +
	"\x05goals\x18\x01 \x03(\v2\x1b.desirelines.config.v1.GoalR\x05goals\"\x80\x01\n" +
	"\x04Goal\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x05R\x05value\x12\x14\n" +
	"\x05label\x18\x03 \x01(\tR\x05label\x12\x1d\n" +
	"\n" +
	"created_at\x18\x04 \x01(\tR\tcreatedAt\x12\x1d\n" +
	"\n" +
	"updated_at\x18\x05 \x01(\tR\tupdatedAt\"Y\n" +
	"\x12AnnotationsForYear\x12C\n" +
	"\vannotations\x18\x01 \x03(\v2!.desirelines.config.v1.AnnotationR\vannotations\"\xb5\x02\n" +
	"\n" +
	"Annotation\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1d\n" +
	"\n" +
	"start_date\x18\x02 \x01(\tR\tstartDate\x12\x19\n" +
	"\bend_date\x18\x03 \x01(\tR\aendDate\x12\x14\n" +
	"\x05label\x18\x04 \x01(\tR\x05label\x12 \n" +
	"\vdescription\x18\x05 \x01(\tR\vdescription\x12,\n" +
	"\x12strava_activity_id\x18\x06 \x01(\tR\x10stravaActivityId\x129\n" +
	"\x04type\x18\a \x01(\x0e2%.desirelines.config.v1.AnnotationTypeR\x04type\x12\x1d\n" +
	"\n" +
	"created_at\x18\b \x01(\tR\tcreatedAt\x12\x1d\n" +
	"\n" +
	"updated_at\x18\t \x01(\tR\tupdatedAt\"\x93\x01\n" +
	"\vPreferences\x12\x14\n" +
	"\x05theme\x18\x01 \x01(\tR\x05theme\x12!\n" +
	"\fdefault_year\x18\x02 \x01(\x05R\vdefaultYear\x12K\n" +
	"\x0echart_defaults\x18\x03 \x01(\v2$.desirelines.config.v1.ChartDefaultsR\rchartDefaults\"Q\n" +
	"\rChartDefaults\x12!\n" +
	"\fshow_average\x18\x01 \x01(\bR\vshowAverage\x12\x1d\n" +
	"\n" +
	"show_goals\x18\x02 \x01(\bR\tshowGoals\"z\n" +
	"\bMetadata\x12\x1d\n" +
	"\n" +
	"created_at\x18\x01 \x01(\tR\tcreatedAt\x12,\n" +
	"\x12last_synced_device\x18\x02 \x01(\tR\x10lastSyncedDevice\x12!\n" +
	"\fconfig_types\x18\x03 \x03(\tR\vconfigTypes*\x82\x01\n" +
	"\x0eAnnotationType\x12\x1f\n" +
	"\x1bANNOTATION_TYPE_UNSPECIFIED\x10\x00\x12\x19\n" +
	"\x15ANNOTATION_TYPE_EVENT\x10\x01\x12\x1a\n" +
	"\x16ANNOTATION_TYPE_PERIOD\x10\x02\x12\x18\n" +
	"\x14ANNOTATION_TYPE_NOTE\x10\x03BBZ@github.com/andy-esch/desirelines/schemas/generated/go/userconfigb\x06proto3"

var (
	file_user_config_proto_rawDescOnce sync.Once
	file_user_config_proto_rawDescData []byte
)

func file_user_config_proto_rawDescGZIP() []byte {
	file_user_config_proto_rawDescOnce.Do(func() {
		file_user_config_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_user_config_proto_rawDesc), len(file_user_config_proto_rawDesc)))
	})
	return file_user_config_proto_rawDescData
}

var file_user_config_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_user_config_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_user_config_proto_goTypes = []any{
	(AnnotationType)(0),        // 0: desirelines.config.v1.AnnotationType
	(*UserConfig)(nil),         // 1: desirelines.config.v1.UserConfig
	(*GoalsForYear)(nil),       // 2: desirelines.config.v1.GoalsForYear
	(*Goal)(nil),               // 3: desirelines.config.v1.Goal
	(*AnnotationsForYear)(nil), // 4: desirelines.config.v1.AnnotationsForYear
	(*Annotation)(nil),         // 5: desirelines.config.v1.Annotation
	(*Preferences)(nil),        // 6: desirelines.config.v1.Preferences
	(*ChartDefaults)(nil),      // 7: desirelines.config.v1.ChartDefaults
	(*Metadata)(nil),           // 8: desirelines.config.v1.Metadata
	nil,                        // 9: desirelines.config.v1.UserConfig.GoalsEntry
	nil,                        // 10: desirelines.config.v1.UserConfig.AnnotationsEntry
}
var file_user_config_proto_depIdxs = []int32{
	9,  // 0: desirelines.config.v1.UserConfig.goals:type_name -> desirelines.config.v1.UserConfig.GoalsEntry
	10, // 1: desirelines.config.v1.UserConfig.annotations:type_name -> desirelines.config.v1.UserConfig.AnnotationsEntry
	6,  // 2: desirelines.config.v1.UserConfig.preferences:type_name -> desirelines.config.v1.Preferences
	8,  // 3: desirelines.config.v1.UserConfig.metadata:type_name -> desirelines.config.v1.Metadata
	3,  // 4: desirelines.config.v1.GoalsForYear.goals:type_name -> desirelines.config.v1.Goal
	5,  // 5: desirelines.config.v1.AnnotationsForYear.annotations:type_name -> desirelines.config.v1.Annotation
	0,  // 6: desirelines.config.v1.Annotation.type:type_name -> desirelines.config.v1.AnnotationType
	7,  // 7: desirelines.config.v1.Preferences.chart_defaults:type_name -> desirelines.config.v1.ChartDefaults
	2,  // 8: desirelines.config.v1.UserConfig.GoalsEntry.value:type_name -> desirelines.config.v1.GoalsForYear
	4,  // 9: desirelines.config.v1.UserConfig.AnnotationsEntry.value:type_name -> desirelines.config.v1.AnnotationsForYear
	10, // [10:10] is the sub-list for method output_type
	10, // [10:10] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_user_config_proto_init() }
func file_user_config_proto_init() {
	if File_user_config_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_user_config_proto_rawDesc), len(file_user_config_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_user_config_proto_goTypes,
		DependencyIndexes: file_user_config_proto_depIdxs,
		EnumInfos:         file_user_config_proto_enumTypes,
		MessageInfos:      file_user_config_proto_msgTypes,
	}.Build()
	File_user_config_proto = out.File
	file_user_config_proto_goTypes = nil
	file_user_config_proto_depIdxs = nil
}
