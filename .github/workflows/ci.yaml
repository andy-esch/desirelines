name: CI

on:
  pull_request:
  push:
    branches: [main]
    paths-ignore:
      - '**/README.md'
      - 'docs/**'

env:
  # Test environment variables
  GCP_PROJECT_ID: "test-project"
  GCP_BIGQUERY_DATASET: "test_dataset"
  GCP_BUCKET_NAME: "test-bucket"
  GCP_PUBSUB_TOPIC: "test-topic"
  STRAVA_CLIENT_ID: "123"
  STRAVA_CLIENT_SECRET: "test_secret"
  STRAVA_REFRESH_TOKEN: "test_token"
  STRAVA_WEBHOOK_VERIFY_TOKEN: "test_verify_token"
  STRAVA_WEBHOOK_SUBSCRIPTION_ID: "12345"

jobs:
  python-quality:
    name: Python Tests & Quality
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v4
        with:
          version: "latest"

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Install Python dependencies
        run: uv sync --all-packages

      - name: Run Python tests
        run: make py-test

      - name: Run Python linting
        run: make py-lint

      - name: Run Python type checking
        run: make py-typecheck

  go-quality:
    name: Go Tests & Quality
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23'

      - name: Install Go dependencies
        run: cd packages/dispatcher && go mod download

      - name: Run Go tests
        run: make go-test

      - name: Run Go linting
        run: make go-lint

      - name: Check Go formatting
        run: |
          make go-format
          if [ -n "$(git status --porcelain)" ]; then
            echo "Go files are not properly formatted"
            git diff
            exit 1
          fi

  terraform-validate:
    name: Terraform Validation
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "~1.0"

      - name: Validate Terraform - Local Environment
        run: |
          cd terraform/environments/local
          terraform fmt -check
          terraform init -backend=false
          terraform validate

      - name: Validate Terraform - Dev Environment
        run: |
          cd terraform/environments/dev
          terraform fmt -check
          terraform init -backend=false
          terraform validate

      - name: Validate Terraform - Prod Environment
        run: |
          cd terraform/environments/prod
          terraform fmt -check
          terraform init -backend=false
          terraform validate

      - name: Validate Terraform - Module
        run: |
          cd terraform/modules/desirelines
          terraform fmt -check
          terraform init -backend=false
          terraform validate